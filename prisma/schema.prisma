// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(uuid())
  createdAt      DateTime        @default(now())
  completedSetup Boolean         @default(false)
  username       String
  userPreference UserPreference?
  tasks          Task[]
  categories     Category[]
}

model UserPreference {
  id            String   @id @default(uuid())
  preferedTheme Theme    @default(light)
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        String   @unique
  updatedAt     DateTime @updatedAt
}

model Category {
  id        String        @id @default(uuid())
  name      String
  tasks     Task[]
  iconColor CategoryColor @default(default)
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  creator   User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String

  @@unique([id, userId])
}

// TODO: add sub tasks using self reference
model Task {
  id              String    @id @default(uuid())
  description     String
  createdAt       DateTime  @default(now())
  completedAt     DateTime?
  updatedAt       DateTime  @updatedAt
  startAt         DateTime?
  estimateMinutes Int       @default(15)
  creator         User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId          String
  category        Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId      String

  @@unique([id, userId])
}

enum Theme {
  light
  dark
  lobby
  sea
  cappuccino
}

enum CategoryColor {
  default
  default_secondary
  forest
  tan
  space
  steel
  copper
  pine_cone
}
